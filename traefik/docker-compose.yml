version: '3.8'

services:
  load-balancer:
    image: traefik:v2.4
    container_name: load-balancer
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--log.level=DEBUG"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpChallenge.entryPoint=web"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge.provider=cloudflare"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge.delayBeforeCheck=300"
      - "--certificatesresolvers.myresolver.acme.tlsChallenge=false"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${STORAGE_LOCATION}/traefik:/etc/traefik
    networks:
      - main
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_URL}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.docker.network=main"
      - "traefik.http.middlewares.tls-headers.headers.frameDeny=false"
      - "traefik.http.middlewares.tls-headers.headers.browserXSSFilter=true"
      - "traefik.http.middlewares.tls-headers.headers.isDevelopment=false"
      - "traefik.http.middlewares.tls-headers.headers.STSSeconds=315360000"
      - "traefik.http.middlewares.tls-headers.headers.forceSTSHeader=false"
      - "traefik.http.middlewares.tls-headers.headers.contentTypeNosniff=true"


  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    container_name: whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN_URL}`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.docker.network=main"
      - "traefik.http.routers.whoami.entrypoints=websecure,web"
      - "traefik.http.routers.whoami.middlewares=traefik-forward-auth,tls-headers"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
    networks:
      - main

networks:
  main:
    external: true
