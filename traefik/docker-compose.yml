version: '3.7'  
  
services:
  load-balancer:
    image: traefik:v2.4
    container_name: load-balancer
    restart: unless-stopped
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--log.level=TRACE"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--serverstransport.insecureskipverify=true"
      # - "--certificatesresolvers.letsencrypt.acme.storage=acme.json"
      # - "--certificatesresolvers.letsencrypt.acme.entryPoint=https"
      # - "--certificatesresolvers.letsencrypt.acme.dnsChallenge.provider=cloudflare"
      # - "--certificatesresolvers.letsencrypt.acme.dnsChallenge.delaybeforecheck=300"
      # - "--certificatesresolvers.letsencrypt.acme.domains=${DOMAIN_URL}"
      # - "--certificatesresolvers.letsencrypt.acme.domains=${WORDPRESS_URL}"
      # - "--certificatesresolvers.letsencrypt.acme.onHostRule=true"
      # - "--certificatesresolvers.letsencrypt.acme.acmelogging=true"
      # - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.watch"
      - "--providers.docker.network=main"
      - "--providers.docker.defaultRule=Host(`{{ .Name }}.${DOMAIN_URL}`)"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${STORAGE_LOCATION}/traefik:/etc/traefik
    networks:
      - main
    labels:
      # global redirect to https
      - "traefik.enable=true"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_URL}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=${OAUTH_FORWARD_URL}"
      - traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User
      - traefik.http.middlewares.traefik-forward-auth.forwardauth.trustForwardHeader=true
      - "traefik.docker.network=main"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
 
  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN_URL}`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.docker.network=main"
      - "traefik.http.routers.whoami.middlewares=traefik-forward-auth"
    networks:
      - main
    
networks:
  main:
    external: true